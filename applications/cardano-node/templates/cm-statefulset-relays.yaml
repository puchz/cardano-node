{{- range $relays := .Values.relays }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "cardano-node-relay-{{ $relays.name }}"
  namespace: {{ $.Values.namespace }}
spec:
  serviceName: "cardano-node-relay-{{ $relays.name }}"
  replicas: 1
  selector:
    matchLabels:
      app: {{ $.Release.Name }}
      name: {{ $relays.name }}
      type: relay
      network: {{ $.Values.network }}
  template:
    metadata:
      labels:
        app: {{ $.Release.Name }}
        name: {{ $relays.name }}
        type: relay
        network: {{ $.Values.network }}
    spec:
      containers:
      - image: cardano-node:1.24.2
        name: {{ $.Release.Name }}
        command:
          - "cardano-node"
        args:
          - "run"
          - "--topology"
          - "/etc/config/testnet-topology.json"
          - "--database-path"
          - "/db"
          - "--socket-path"
          - "/db/node.socket"
          - "--host-addr"
          - "0.0.0.0"
          - "--port"
          - "3000"
          - "--config"
          - "/etc/config/testnet-config.json"
        ports:
          - containerPort: {{ $relays.port }}
            name: node
          - name: prom
            containerPort: {{ $relays.prometheusPort | default 12798 }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: prom
          initialDelaySeconds: 120
          periodSeconds: 5
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /metrics
            port: prom
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 10
        {{- with $.Values.resources }}
        resources:
{{ toYaml . | indent 12 }}
        {{- end }}
        volumeMounts:
          - name: config-files
            mountPath: "/etc/config/testnet-topology.json"
            subPath: "testnet-topology-relay.json"
          - name: config-files
            mountPath: "/etc/config/testnet-config.json"
            subPath: "testnet-config.json"
          - name: db
            mountPath: /db
      volumes:
        - name: config-files
          configMap:
            name: {{ $.Release.Name }}-configmap
        - name: db
          persistentVolumeClaim:
            claimName: relay-{{ $relays.name }}-pvc
{{- end }}
